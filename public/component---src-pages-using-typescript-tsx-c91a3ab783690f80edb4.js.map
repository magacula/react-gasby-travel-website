{"version":3,"sources":["webpack:///./src/pages/using-typescript.tsx","webpack:///./src/components/Navbar/GlobalNav.js","webpack:///./src/components/layout.js"],"names":["UsingTypescript","data","path","title","site","buildTime","href","to","GlobalNav","useState","click","setClick","handleClick","onClick","Layout","children","GlobalStyles","Footer"],"mappings":"8FAAA,oEAyBeA,UAZyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACtD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,qBACX,sEACA,uEAA4C,wCAA5C,+DAAyH,2CAAzH,wEACA,uEAA4C,0CAA5C,oBAAgF,0CAAhF,gBAAgH,yCAAhH,UACA,6DAAkCD,EAAlC,wBAA6DD,EAAKG,KAAKC,UAAvE,KACA,8DAAmC,uBAAGC,KAAK,6CAAR,kCAAnC,KACA,kBAAC,OAAD,CAAMC,GAAG,KAAT,8B,mFC2BWC,EAlCG,WAAO,IAAD,EACIC,oBAAS,GAA5BC,EADe,KACRC,EADQ,KAGhBC,EAAc,kBAAMD,GAAUD,IAEpC,OACE,kBAAC,IAAD,CAAKA,MAAOA,GACV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASH,GAAG,KACV,kBAAC,IAAD,MADF,SAIA,kBAAC,IAAD,CAAYM,QAASD,EAAaF,MAAOA,GACtCA,EAAQ,kBAAC,IAAD,MAAY,kBAAC,IAAD,OAEvB,kBAAC,IAAD,CAASG,QAASD,EAAaF,MAAOA,GACpC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUH,GAAG,KAAb,SAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUA,GAAG,iBAAb,YAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUA,GAAG,UAAb,aAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUA,GAAG,YAAb,gB,YCvBGO,IAXA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,oCACE,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,8BAAOD,GACP,kBAACE,EAAA,EAAD","file":"component---src-pages-using-typescript-tsx-c91a3ab783690f80edb4.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <SEO title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>This means that you can create and write <em>.ts/.tsx</em> files for your pages, components etc. Please note that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't support TypeScript yet.</p>\n    <p>For type checking you'll want to install <em>typescript</em> via npm and run <em>tsc --init</em> to create a <em>.tsconfig</em> file.</p>\n    <p>You're currently on the page \"{path}\" which was built on {data.site.buildTime}.</p>\n    <p>To learn more, head over to our <a href=\"https://www.gatsbyjs.com/docs/typescript/\">documentation about TypeScript</a>.</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React, { useState } from \"react\"\nimport {\n  Nav,\n  NavbarContainer,\n  NavLogo,\n  NavIcon,\n  MobileIcon,\n  NavMenu,\n  NavItem,\n  NavLinks,\n  Bars,\n  Times,\n} from \"./NavbarElements\"\n\nconst GlobalNav = () => {\n  const [click, setClick] = useState(false)\n\n  const handleClick = () => setClick(!click) // toggle the mobile icon from 3 bars to X\n\n  return (\n    <Nav click={click}>\n      <NavbarContainer>\n        <NavLogo to=\"/\">\n          <NavIcon />\n          XCAPE\n        </NavLogo>\n        <MobileIcon onClick={handleClick} click={click}>\n          {click ? <Times /> : <Bars />}\n        </MobileIcon>\n        <NavMenu onClick={handleClick} click={click}>\n          <NavItem>\n            <NavLinks to=\"/\">Home</NavLinks>\n          </NavItem>\n          <NavItem>\n            <NavLinks to=\"/destinations\">Explore</NavLinks>\n          </NavItem>\n          <NavItem>\n            <NavLinks to=\"/about\">About Us</NavLinks>\n          </NavItem>\n          <NavItem>\n            <NavLinks to=\"/contact\">Contact</NavLinks>\n          </NavItem>\n        </NavMenu>\n      </NavbarContainer>\n    </Nav>\n  )\n}\n\nexport default GlobalNav\n","import React from \"react\"\nimport \"./styles/GlobalStyles.js\"\nimport GlobalNav from \"./Navbar/GlobalNav\"\nimport { GlobalStyles } from \"./styles/GlobalStyles\"\nimport { Footer } from \"./Footer\"\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <GlobalStyles />\n      <GlobalNav />\n      <main>{children}</main>\n      <Footer />\n    </>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}